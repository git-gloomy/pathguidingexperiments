#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!fsharp

#r "nuget: SimpleImageIO"
open SimpleImageIO
HTML(FlipBook.Header).Display() |> ignore

#!fsharp

#r "nuget: Plotly.NET, 2.0.0"
#r "nuget: Plotly.NET.Interactive, 2.0.0"
open Plotly.NET

#!fsharp

let sceneName = "Pool"
let path = ("Results/" + sceneName + "/Prelearned")
let reference = new RgbImage("Results/" + sceneName + "/Reference.exr")

#!fsharp

let renderTime method =
    let json = System.IO.File.ReadAllText(path + $"/{method}/Render.json")
    let doc = System.Text.Json.JsonDocument.Parse(json)
    doc.RootElement.GetProperty("RenderTime").GetDouble()
Map [
    ("Guided path tracing (0.5)", 0.001 * renderTime "PathGuiding05")
    ("Guided path tracing (Kullback-Leibler)", 0.001 * renderTime "KullbackLeibler")
    ("Guided path tracing (Root Adaptive)", 0.001 * renderTime "RootAdaptive")
    ("Guided path tracing (Second Moment)", 0.001 * renderTime "SecondMoment")
]

#!fsharp

Map [
    ("Guided path tracing (0.5)", Metrics.RelMSE_OutlierRejection(new RgbImage(path + "/PathGuiding05/Render.exr"), reference, 0.01f))
    ("Guided path tracing (Kullback-Leibler)", Metrics.RelMSE_OutlierRejection(new RgbImage(path + "/KullbackLeibler/Render.exr"), reference, 0.01f))
    ("Guided path tracing (Root Adaptive)", Metrics.RelMSE_OutlierRejection(new RgbImage(path + "/RootAdaptive/Render.exr"), reference, 0.01f))
    ("Guided path tracing (Second Moment)", Metrics.RelMSE_OutlierRejection(new RgbImage(path + "/SecondMoment/Render.exr"), reference, 0.01f))
]

#!fsharp

let relMSE method ignore limit =
    let json = System.IO.File.ReadAllText(path + $"/{method}/Render.json")
    let doc = System.Text.Json.JsonDocument.Parse(json)
    let errors = doc.RootElement.GetProperty("ErrorMetrics").EnumerateArray()
    let mutable map = Map.empty
    let mutable count = 1
    let mutable ignore_count = 1
    for e in errors do
        if ignore_count > ignore && count <= limit then
            map <- map.Add(count, e.GetProperty("RelMSE_Outlier").GetDouble())
            count <- count + 1
        ignore_count <- ignore_count + 1
    map

//let pt = relMSE "PathTracing" 0 125
let gpt01 = relMSE "PathGuiding02" 0 125
let gpt05 = relMSE "PathGuiding05" 0 125
let gpt09 = relMSE "PathGuiding08" 0 125
let ra = relMSE "RootAdaptive" 25 125
let kl = relMSE "KullbackLeibler" 25 125 
let sm = relMSE "SecondMoment" 25 125

let layout = Layout.init(Height = 1, Width = 4)
let combine = 
    [   
        //Chart.Line(Seq.cast(pt.Keys), Seq.cast(pt.Values), Name = "Path Tracer")
        Chart.Line(Seq.cast(gpt01.Keys), Seq.cast(gpt01.Values), Name = "Guided Path Tracer (0.2)")
        Chart.Line(Seq.cast(gpt05.Keys), Seq.cast(gpt05.Values), Name = "Guided Path Tracer (0.5)")
        Chart.Line(Seq.cast(gpt09.Keys), Seq.cast(gpt09.Values), Name = "Guided Path Tracer (0.8)")
        Chart.Line(Seq.cast(ra.Keys), Seq.cast(ra.Values), Name = "Root Adaptive")
        Chart.Line(Seq.cast(kl.Keys), Seq.cast(kl.Values), Name = "Kullback Leibler")
        Chart.Line(Seq.cast(sm.Keys), Seq.cast(sm.Values), Name = "Second Moment") 
    ]
    |> Chart.combine
    |> Chart.withLayout(layout)
    |> Chart.withTitle(sceneName + ": Relative Mean Squared Error")
    //|> Chart.withYAxis(LayoutObjects.LinearAxis.init(AxisType=StyleParam.AxisType.Log))
    |> Chart.show

#!markdown

### Rendered images

#!fsharp

FlipBook.New
    .Add("Guided path tracing (0.5)", new RgbImage(path + "/PathGuiding05/Render.exr"))
    .Add("Guided path tracing (Kullback-Leibler)", new RgbImage(path + "/KullbackLeibler/Render.exr"))
    .Add("Guided path tracing (root adaptive)", new RgbImage(path + "/RootAdaptive/Render.exr"))
    .Add("Guided path tracing (second moment)", new RgbImage(path + "/SecondMoment/Render.exr"))
|> HTML

#!markdown

### False-color error images

#!fsharp

FlipBook.New
    .WithToneMapper(FlipBook.InitialTMO.FalseColor(0.0f, 0.1f, false))
    .Add("Guided path tracing (0.5)", Metrics.RelMSEImage(new RgbImage(path + "/PathGuiding05/Render.exr"), reference))
    .Add("Guided path tracing (Kullback-Leibler)", Metrics.RelMSEImage(new RgbImage(path + "/KullbackLeibler/Render.exr"), reference))
    .Add("Guided path tracing (root adaptive)", Metrics.RelMSEImage(new RgbImage(path + "/RootAdaptive/Render.exr"), reference))
    .Add("Guided path tracing (second moment)", Metrics.RelMSEImage(new RgbImage(path + "/SecondMoment/Render.exr"), reference))
|> HTML
